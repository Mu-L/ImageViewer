<Window x:Class="ImageViewer.Views.Dialog.ExportDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ImageViewer.Views.Dialog" 
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="Export"
        Width="400"
        SizeToContent="Height"
        WindowStartupLocation="CenterOwner"
        ResizeMode="NoResize"
        Icon="../../Icons/app.png"
        Style="{StaticResource WindowStyle}">

    <Window.Resources>
        <GridLength x:Key="GridWidth">60</GridLength>
        <GridLength x:Key="BoxesGridWidth">100</GridLength>
    </Window.Resources>
    <Grid>
        <Border Padding="5">
            <StackPanel>
                
                <Grid Margin="{StaticResource DefaultBorderBottom}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{StaticResource GridWidth}"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TextBlock 
                        Grid.Column="0" 
                        Text="Filename:"/>
                    <TextBox 
                        Grid.Column="1" 
                        IsEnabled="False"
                        Text="{Binding Filename}"/>
                </Grid>
                
                <!-- LAYER -->
                <Grid Margin="{StaticResource DefaultBorderBottom}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{StaticResource GridWidth}"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Text="Layer:"/>
                    <ComboBox 
                        Grid.Column="1"
                        IsEnabled="{Binding EnableLayers}"
                        ItemsSource="{Binding AvailableLayers}"
                        SelectedItem="{Binding SelectedLayer}"
                        ItemTemplate="{StaticResource ListItemView}"/>
                </Grid>
                <!-- MIPMAPS -->
                <Grid Margin="{StaticResource DefaultBorderBottom}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{StaticResource GridWidth}"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Mipmap:"/>
                    <ComboBox 
                        Grid.Column="1"
                        IsEnabled="{Binding EnableMipmaps}"
                        ItemsSource="{Binding AvailableMipmaps}"
                        SelectedItem="{Binding SelectedMipmap}"
                        ItemTemplate="{StaticResource ListItemView}"/>
                </Grid>

                <!-- Pixel Type -->
                <Grid 
                    Margin="{StaticResource DefaultBorderBottom}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{StaticResource GridWidth}"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Data Type:"/>
                    <ComboBox 
                        Grid.Column="1"
                        IsEnabled="{Binding EnableDataType}"
                        ItemsSource="{Binding AvailableDataTypes}"
                        SelectedItem="{Binding SelectedDataType}"
                        ItemTemplate="{StaticResource ListItemView}"/>
                </Grid>

                <!-- Format -->
                <Grid Margin="{StaticResource DefaultBorderBottom}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{StaticResource GridWidth}"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Format:"/>
                    <ComboBox 
                        Grid.Column="1"
                        IsEnabled="{Binding EnableFormat}"
                        ItemsSource="{Binding AvailableFormats}"
                        SelectedItem="{Binding SelectedFormat}"
                        ItemTemplate="{StaticResource ListItemView}"/>
                </Grid>

                <!-- QUALITY -->
                <Grid 
                    Margin="{StaticResource DefaultBorderBottom}"
                    Visibility="{Binding HasQuality}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{StaticResource GridWidth}"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TextBlock 
                        Grid.Column="0" 
                        Text="Quality: "/>
                    <xctk:IntegerUpDown
                        Grid.Column="1"
                        Width="80"
                        Value="{Binding Quality}"
                        Minimum="{Binding MinQuality}"
                        Maximum="{Binding MaxQuality}"
                        HorizontalAlignment="Left"/>
                </Grid>

                <!-- Crop -->
                <GroupBox Margin="{StaticResource DefaultBorderBottom}"
                          Padding="{StaticResource DefaultBorderTop}">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Crop:" Margin="{StaticResource DefaultBorderRight}" HorizontalAlignment="Center"/>
                            <CheckBox 
                                HorizontalAlignment="Center"
                                IsChecked="{Binding UseCropping}"/>
                        </StackPanel>
                    </GroupBox.Header>
                    <StackPanel HorizontalAlignment="Center">
                        <StackPanel 
                            Orientation="Horizontal"
                            Margin="{StaticResource DefaultBorderBottom}">
                            <TextBlock Text="X from:" Margin="{StaticResource DefaultBorderRight}"/>
                            <xctk:IntegerUpDown
                                Width="80"
                                IsEnabled="{Binding UseCropping}"
                                Margin="{StaticResource DefaultBorderRight}"
                                Value="{Binding Crop.CropStartX}"/>
                            <TextBlock Text="to:" Margin="{StaticResource DefaultBorderRight}"/>
                            <xctk:IntegerUpDown
                                Width="80"
                                IsEnabled="{Binding UseCropping}"
                                Value="{Binding Crop.CropEndX}"/>
                        </StackPanel>
                        <StackPanel
                            Orientation="Horizontal"
                            Margin="{StaticResource DefaultBorderBottom}">
                            <TextBlock Text="Y from:" Margin="{StaticResource DefaultBorderRight}"/>
                            <xctk:IntegerUpDown
                                Width="80"
                                IsEnabled="{Binding UseCropping}"
                                Margin="{StaticResource DefaultBorderRight}"
                                Value="{Binding Crop.CropStartY}"/>
                            <TextBlock Text="to:" Margin="{StaticResource DefaultBorderRight}"/>
                            <xctk:IntegerUpDown
                                Width="80"
                                IsEnabled="{Binding UseCropping}"
                                Margin="{StaticResource DefaultBorderRight}"
                                Value="{Binding Crop.CropEndY}"/>
                        </StackPanel>
                        <StackPanel
                            Visibility="{Binding ZCropVisibility}"
                            Orientation="Horizontal">
                            <TextBlock Text="Z from:" Margin="{StaticResource DefaultBorderRight}"/>
                            <xctk:IntegerUpDown
                                Width="80"
                                IsEnabled="{Binding UseCropping}"
                                Margin="{StaticResource DefaultBorderRight}"
                                Value="{Binding Crop.CropStartZ}"/>
                            <TextBlock Text="to:" Margin="{StaticResource DefaultBorderRight}"/>
                            <xctk:IntegerUpDown
                                Width="80"
                                IsEnabled="{Binding UseCropping}"
                                Value="{Binding Crop.CropEndZ}"/>
                        </StackPanel>
                    </StackPanel>

                </GroupBox>
                
                <!-- Zoom Box -->
                <GroupBox
                    Visibility="{Binding HasZoomBox, Converter={StaticResource VisibleCollapsedConverter}}"
                    Margin="{StaticResource DefaultBorderBottom}"
                    Padding="{StaticResource DefaultBorderTop}">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Export Zoom Boxes:" Margin="{StaticResource DefaultBorderRight}" HorizontalAlignment="Center"/>
                            <CheckBox 
                                HorizontalAlignment="Center"
                                IsChecked="{Binding ExportZoomBox}"
                                VerticalAlignment="Center"
                                ToolTip="The colored zoom boxes will be exported as well and saved as 'filename_zoomID'"/>
                        </StackPanel>
                    </GroupBox.Header>
                    <Grid IsEnabled="{Binding ExportZoomBox}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{StaticResource BoxesGridWidth}"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBlock
                            Text="Include Border:"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="{StaticResource DefaultBorderBottom}"/>

                        <CheckBox 
                            IsChecked="{Binding ZoomBorders}"
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="{StaticResource DefaultBorderBottom}"
                            VerticalAlignment="Center"
                            ToolTip="The colored border will be included for export of the zoom box images"/>

                        <TextBlock
                            Text="Scale:"
                            Grid.Row="1"
                            Grid.Column="0"
                            Margin="{StaticResource DefaultBorderBottom}"/>

                        <xctk:IntegerUpDown
                            Grid.Row="1"
                            Grid.Column="1"  
                            Minimum="1"
                            Maximum="16"
                            Value="{Binding ZoomBoxScale}"/>
                    </Grid>
                </GroupBox>

                <TextBlock 
                    Margin="0 15 0 15"
                    Text="{Binding Description, FallbackValue=Sample Description}"
                    TextWrapping="Wrap"/>

                <TextBlock 
                    Margin="{StaticResource DefaultBorderRight}"
                    Text="{Binding Warning, FallbackValue=!!Warning Text!!}"
                    TextWrapping="Wrap"
                    Foreground="Red"
                    Visibility="{Binding WarningVisibility}"/>

                <Grid HorizontalAlignment="Right">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button 
                        Content="_Export" 
                        Margin="{StaticResource DefaultBorderRight}"
                        Width="60"
                        Click="ButtonExport_OnClick"
                        IsEnabled="{Binding IsValid}"
                        IsDefault="True"
                        />
                    <Button 
                        Grid.Column="1" 
                        Content="_Cancel" 
                        Width="60"
                        Click="ButtonCancel_OnClick"
                        IsCancel="True"/>
                </Grid>
            </StackPanel>
        </Border>
    </Grid>
</Window>
