<UserControl x:Class="ImageViewer.Views.MenuBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ImageViewer.Views" 
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="24" 
             d:DesignWidth="400">
    <Menu 
        DockPanel.Dock="Top" 
        Padding="0 0 0 2">

        <MenuItem Header="File">
            <!-- Import --> 
            <MenuItem 
                    Header="_Open"
                    Command="{Binding OpenCommand}"
                    InputGestureText="Ctrl+O"
                  IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image Source="../Icons/open.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem 
                    Header="_Import"
                    Command="{Binding ImportCommand}"
                    InputGestureText="Ctrl+I"
                    IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image Source="../Icons/import.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                Header="Import as Array/3D"
                ToolTip="Combines multiple 2D images into a single texture array or 3D texture on import"
                IsEnabled="{Binding Progress.NotProcessing}"
                Command="{Binding ImportArrayCommand}">
                <MenuItem.Icon>
                    <Image Source="../Icons/image_layer.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <!--<MenuItem
                Header="Import Video as TextureArray"
                ToolTip="Imports frames from the video into a TextureArray"
                IsEnabled="{Binding Progress.NotProcessing}"
                Command="{Binding ImportMovieCommand}">
                <MenuItem.Icon>
                    <Image Source="../Icons/video.png"/>
                </MenuItem.Icon>
            </MenuItem>-->
            <Separator/>

            <!-- Export -->
            <MenuItem 
                    Header="_Export"
                    InputGestureText="Ctrl+S"
                    Command="{Binding ExportCommand}"
                    IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image Source="../Icons/save.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem 
                Header="Export Video"
                Command="{Binding ExportMovieCommand}"
                IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image Source="../Icons/save.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                Header="{Binding ExportOverwriteCommand.Text, FallbackValue=Overwrite ...}"
                Command="{Binding ExportOverwriteCommand}"
                IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image Source="../Icons/refresh.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>


            <!-- Image Config -->
            <MenuItem 
                Header="Load Image Config"
                Command="{Binding ImportConfigCommand}"
                IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image Source="../Icons/open_config.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem 
                Header="Save Image Config"
                Command="{Binding ExportConfigCommand}"
                IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image Source="../Icons/save_config.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>

            <MenuItem 
                Header="Animated Diff (.mp4)"
                ToolTip="Export video with a side-by-side comparision of two images"
                Command="{Binding GifExportCommand}"
                IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image Source="../Icons/save.png"/>
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>
        <!--END FILE-->

        <MenuItem Header="_View">
            <MenuItem 
                    Header="Linear Interpolation" 
                    IsCheckable="True"
                    IsChecked="{Binding Display.LinearInterpolation}"/>
            <MenuItem 
                Header="Display Absolute Values" 
                IsCheckable="True"
                IsChecked="{Binding Display.DisplayNegative}"/>
            <MenuItem
                Header="NaN Color"
                Command="{Binding SelectNaNColorCommand}">
                <MenuItem.Icon>
                    <Border 
                        Width="16" 
                        Height="16"
                        Background="{Binding Display.NaNColor, FallbackValue=Red}"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                    Header="Show Crop Box"
                    IsCheckable="True"
                    IsChecked="{Binding Display.ShowCropRectangle}"
                    ToolTip="Shows the crop box if cropping is enabled for export"
                    />
            
            <Separator/>
            <MenuItem
                Header="Flip Y Axis"
                IsCheckable="True"
                IsChecked="{Binding Display.FlipYAxis}"/>
            <MenuItem 
                    Header="_Pixel Display"
                    Command="{Binding ShowPixelDisplayCommand}">
                <MenuItem.Icon>
                    <Image Source="../Icons/displayconfig.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem
                Header="_Theme"
                IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem
                    Header="Default"
                    Command="{Binding SetThemeCommand}"
                    IsEnabled="{Binding SetThemeCommand.DefaultEnabled}">
                    <MenuItem.CommandParameter>
                        <system:Int32>0</system:Int32>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem
                    Header="White"
                    Command="{Binding SetThemeCommand}"
                    IsEnabled="{Binding SetThemeCommand.WhiteEnabled}">
                    <MenuItem.CommandParameter>
                        <system:Int32>1</system:Int32>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem
                    Header="Dark"
                    Command="{Binding SetThemeCommand}"
                    IsEnabled="{Binding SetThemeCommand.DarkEnabled}">
                    <MenuItem.CommandParameter>
                        <system:Int32>2</system:Int32>
                    </MenuItem.CommandParameter>
                </MenuItem>
            </MenuItem>
            <MenuItem 
                Header="Alpha Background"
                ToolTip="Background color when using transparent images">
                <MenuItem 
                    Header="White"
                    IsCheckable="True"
                    IsChecked="{Binding Display.IsAlphaWhite}"/>
                <MenuItem 
                    Header="Black"
                    IsCheckable="True"
                    IsChecked="{Binding Display.IsAlphaBlack}"/>
                <MenuItem 
                    Header="Checkers"
                    IsCheckable="True"
                    IsChecked="{Binding Display.IsAlphaCheckers}"/>
                <MenuItem 
                    Header="Theme"
                    IsCheckable="True"
                    IsChecked="{Binding Display.IsAlphaTheme}"/>
            </MenuItem>
        </MenuItem>
        <!--END VIEW-->

        <MenuItem Header="Overlays"
                  IsEnabled="{Binding Images.IsEmptyOr2D}">
            <!-- Zoombox -->
            <MenuItem
                Header="Add Zoombox"
                Command="{Binding StartZoomboxCommand}"
                IsEnabled="{Binding Progress.NotProcessing}"
                Visibility="{Binding Images.IsEmptyOr2D, Converter={StaticResource VisibleCollapsedConverter}}">
                <MenuItem.Icon>
                    <Image 
                        Source="../Icons/image_box.png"
                        Width="16"
                        Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                Header="Remove Zoombox"
                IsEnabled="{Binding ZoomBox.HasBoxes}"
                ItemsSource="{Binding ZoomBox.Boxes}"
                Visibility="{Binding Images.IsEmptyOr2D, Converter={StaticResource VisibleCollapsedConverter}}">
                <MenuItem.Icon>
                    <Image 
                        Source="../Icons/cancel.png"
                        Width="16"
                        Height="16"/>
                </MenuItem.Icon>
                <MenuItem.ItemTemplate>
                    <DataTemplate DataType="Border">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Box "
                                       VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding Id}"
                                       Margin="{StaticResource DefaultBorderRight}"
                                       VerticalAlignment="Center"/>
                            <Border 
                                Width="16" 
                                Height="16"
                                Background="{Binding Brush, FallbackValue=Blue}"/>
                        </StackPanel>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Header" Value="{Binding}"/>
                        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.RemoveZoomboxCommand}"/>
                        <Setter Property="CommandParameter" Value="{Binding Id}"/>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>

            <Separator/>

            <!-- Arrows -->
            <MenuItem
                Header="Add Arrow"
                Command="{Binding StartArrowCommand}"
                IsEnabled="{Binding Progress.NotProcessing}"
                Visibility="{Binding Images.IsEmptyOr2D, Converter={StaticResource VisibleCollapsedConverter}}">
                <MenuItem.Icon>
                    <Image 
                        Source="../Icons/arrow_right.png"
                        Width="16"
                        Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                Header="Remove Arrow"
                Command="{Binding StartArrowCommand}"
                IsEnabled="{Binding Arrows.HasArrows}"
                ItemsSource="{Binding Arrows.Arrows}"
                Visibility="{Binding Images.IsEmptyOr2D, Converter={StaticResource VisibleCollapsedConverter}}">
                <MenuItem.Icon>
                    <Image 
                        Source="../Icons/cancel.png"
                        Width="16"
                        Height="16"/>
                </MenuItem.Icon>
                <MenuItem.ItemTemplate>
                    <DataTemplate DataType="Border">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Arrow "
                                       VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding Id}"
                                       Margin="{StaticResource DefaultBorderRight}"
                                       VerticalAlignment="Center"/>
                            <Border 
                                Width="16" 
                                Height="16"
                                Background="{Binding Brush, FallbackValue=Blue}"/>
                        </StackPanel>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Header" Value="{Binding}"/>
                        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.RemoveArrowCommand}"/>
                        <Setter Property="CommandParameter" Value="{Binding Id}"/>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>

            <!--
            
            <Separator/>
            
            <MenuItem 
                Header="Heatmap"
                IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image 
                        Source="../Icons/temperature.png"
                        Width="16"
                        Height="16"/>
                </MenuItem.Icon>
                
                <MenuItem
                    Header="Enable Overlay"
                    IsCheckable="True"
                    IsChecked="{Binding Display.Heatmap.IsEnabled}"/>
                <MenuItem
                    Header="Load Filter"
                    Command="{Binding Display.Heatmap.LoadFilterCommand}"/>
                <MenuItem
                    Header="Set Position"
                    IsEnabled="{Binding Display.Heatmap.IsEnabled}"
                    Command="{Binding Display.Heatmap.SetPositionCommand}"/>
                <MenuItem
                    Header="Configure"
                    IsEnabled="{Binding Display.Heatmap.IsEnabled}"
                    Command="{Binding Display.Heatmap.ConfigureCommand}"/>
            </MenuItem>
        </MenuItem>
                
            -->
            </MenuItem>
            <!-- END OVERLAYS -->

        <MenuItem Header="Tools">
            <!-- Scaling + Padding -->
            <MenuItem Header="Scale"
                      Command="{Binding ShowScaleCommand}"
                      IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image 
                        Source="../Icons/scale.png"
                        Width="16" 
                        Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Padding"
                      Command="{Binding ShowPaddingCommand}"
                      IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image 
                        Source="../Icons/padding.png"
                        Width="16" 
                        Height="16"/>
                </MenuItem.Icon>
            </MenuItem>

            <!-- Mipmaps -->
            <Separator/>
            <MenuItem 
                    Header="Generate Mipmaps"
                    Command="{Binding GenerateMipmapsCommand}"
                    IsEnabled="{Binding Progress.NotProcessing}"
                    ToolTip="Generates mipmaps with the current mipmap technique.">
                <MenuItem.Icon>
                    <Image 
                            Source="../Icons/image.png"
                            Width="16" 
                            Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                Header="Mipmap Technique"
                ToolTip="Technique used for mipmap generation"
                IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem 
                    Header="Box Filter (Default)"
                    IsCheckable="True"
                    IsChecked="{Binding Scale.UseBoxFilter}"
                    ToolTip="All samples are weighted equally."/>
                <MenuItem 
                    Header="Triangle Low-Pass"
                    IsCheckable="True"
                    IsChecked="{Binding Scale.UseTriangleFilter}"
                    ToolTip="The kernel function looks like a tent (1.0 - abs(x)) and the kernel radius is twice as large."/>
                <MenuItem 
                    Header="Lanczos Low-Pass"
                    IsCheckable="True"
                    IsChecked="{Binding Scale.UseLanzosFilter}"
                    ToolTip="Samples near the center have a higher weight and the kernel radius is three times bigger. Very similar to Kaiser filter."/>
                <MenuItem 
                    Header="Detail Preserving"
                    IsCheckable="True"
                    IsChecked="{Binding Scale.UseDetailPreserving}"
                    ToolTip="Details are preserved when downscaling. Based on 'Rapid, Detail-Preserving Image Downscaling'"/>
                <MenuItem 
                    Header="Detail Preserving (Stronger)"
                    IsCheckable="True"
                    IsChecked="{Binding Scale.UseVeryDetailPreserving}"
                    ToolTip="Details are preserved when downscaling. Based on 'Rapid, Detail-Preserving Image Downscaling'"/>
                <MenuItem 
                    Header="Help"
                    ToolTip="Displays overview of existing mipmap techniques."
                    Command="{Binding HelpCommand}">
                    <MenuItem.CommandParameter>
                        <system:String>help/mipmaps.md</system:String>
                    </MenuItem.CommandParameter>
                    <MenuItem.Icon>
                        <Image 
                            Source="../Icons/help.png"
                            Width="16" 
                            Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                </MenuItem>

            <!-- Alpha Test -->
            <MenuItem
                Header="Alpha Testing"
                ToolTip="Additional post-processing for textures with alpha test (cutout-material)"
                IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem 
                    Header="Disabled (Default)"
                    IsCheckable="True"
                    IsChecked="{Binding Scale.UseAlphaNone}"
                    ToolTip="No post-processing"/>
                <MenuItem 
                    Header="Alpha Scale"
                    IsCheckable="True"
                    IsChecked="{Binding Scale.UseAlphaScale}"
                    ToolTip="Rescale alpha values to preserve alpha coverage (Unity: mipMapsPreserveCoverage)"/>
                <!--
                <MenuItem 
                    Header="Alpha Pyramid"
                    IsCheckable="True"
                    IsChecked="{Binding Scale.UseAlphaPyramid}"
                    ToolTip="Redistribute alpha values to preserve alpha coverage. More noisy but better at handling semi transparent and thin materials"/>
                <MenuItem 
                    Header="Alpha Connectivity (Beta)"
                    IsCheckable="True"
                    IsChecked="{Binding Scale.UseAlphaConnectivity}"
                    ToolTip="Strong emphasis on maintaining connectivity in each mipmap while preserving alpha coverage"/>
                -->
            </MenuItem>

            <MenuItem 
                    Header="Delete Mipmaps"
                    Command="{Binding DeleteMipmapsCommand}"
                    IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image 
                            Source="../Icons/cancel.png"
                            Width="16" 
                            Height="16"/>
                </MenuItem.Icon>
            </MenuItem>




            <Separator Visibility="{Binding Images.IsEmptyOr2D, Converter={StaticResource VisibleCollapsedConverter}}"/>
            <MenuItem
                Header="LatLong to Cubemap"
                Command="{Binding LatLongToCubemapCommand}"
                IsEnabled="{Binding Progress.NotProcessing}"
                Visibility="{Binding Images.IsEmptyOr2D, Converter={StaticResource VisibleCollapsedConverter}}">
                <MenuItem.Icon>
                    <Image 
                        Source="../Icons/cube.png"
                        Width="16"
                        Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                Header="Cubemap to LatLong"
                Command="{Binding CubemapToLatLongCommand}"
                IsEnabled="{Binding Progress.NotProcessing}"
                Visibility="{Binding Images.IsEmptyOr2D, Converter={StaticResource VisibleCollapsedConverter}}">
                <MenuItem.Icon>
                    <Image 
                        Source="../Icons/image_long.png"
                        Width="16"
                        Height="16"/>
                </MenuItem.Icon>
            </MenuItem>

            <Separator/>
            <MenuItem
                Header="TextureArray to Texture3D"
                Command="{Binding ArrayTo3DCommand}"
                IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image 
                        Source="../Icons/cube.png"
                        Width="16"
                        Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                Header="Texture3D to TextureArray"
                Command="{Binding Tex3DToArrayCommand}"
                IsEnabled="{Binding Progress.NotProcessing}">
                <MenuItem.Icon>
                    <Image 
                        Source="../Icons/image_layer.png"
                        Width="16"
                        Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>
        <!--END TOOLS-->

        <MenuItem Header="Help">
            <MenuItem 
                    Header="About"
                    Command="{Binding HelpCommand}">
                <MenuItem.CommandParameter>
                    <system:String>help/about.md</system:String>
                </MenuItem.CommandParameter>
                <MenuItem.Icon>
                    <Image 
                        Source="../Icons/help.png"
                        Width="16"
                        Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                Header="Getting Started"
                Command="{Binding HelpCommand}">
                <MenuItem.CommandParameter>
                    <system:String>help/getting_started.md</system:String>
                </MenuItem.CommandParameter>
            </MenuItem>
            <Separator/>
            <MenuItem
                Header="Equation"
                Command="{Binding HelpCommand}">
                <MenuItem.CommandParameter>
                    <system:String>help/equation.md</system:String>
                </MenuItem.CommandParameter>
            </MenuItem>
            <MenuItem
                    Header="Filter Manual"
                    Command="{Binding HelpCommand}">
                    <MenuItem.CommandParameter>
                        <system:String>help/filter_manual.md</system:String>
                    </MenuItem.CommandParameter>
            </MenuItem>
            <MenuItem
                Header="Statistics"
                Command="{Binding HelpCommand}">
                <MenuItem.CommandParameter>
                    <system:String>help/statistics.md</system:String>
                </MenuItem.CommandParameter>
            </MenuItem>
            
            <Separator/>
            <MenuItem
                Header="Mipmaps"
                Command="{Binding HelpCommand}">
                <MenuItem.CommandParameter>
                    <system:String>help/mipmaps.md</system:String>
                </MenuItem.CommandParameter>
            </MenuItem>
            <MenuItem
                Header="3D Textures"
                Command="{Binding HelpCommand}">
                <MenuItem.CommandParameter>
                    <system:String>help/volumetric.md</system:String>
                </MenuItem.CommandParameter>
            </MenuItem>
            <MenuItem
                Header="Overlays"
                Command="{Binding HelpCommand}">
                <MenuItem.CommandParameter>
                    <system:String>help/overlays.md</system:String>
                </MenuItem.CommandParameter>
            </MenuItem>
        </MenuItem>
    </Menu>
</UserControl>
